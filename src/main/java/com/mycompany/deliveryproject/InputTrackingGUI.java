/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.deliveryproject;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class InputTrackingGUI extends javax.swing.JFrame {

    /**
     * Creates new form InputTrackingGUI
     */
    public InputTrackingGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        dateField = new com.toedter.calendar.JDateChooser();
        trackingIDField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Tracking ID :");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Date :");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Or");

        trackingIDField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        trackingIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackingIDFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchButton)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateField, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(trackingIDField))
                        .addGap(200, 200, 200))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(trackingIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
         List<DeliveryService> deliveryServices = new ArrayList<>();
        String searchTrackingID = trackingIDField.getText();
       // DateFormat da = new SimpleDateFormat("yyyy-MM-dd");
        Date searchDate=dateField.getDate();
        
        if(trackingIDField != null){
        DeliveryService foundDeliveryService = searchByTrackingID(deliveryServices, searchTrackingID);

        if (foundDeliveryService != null) {
            JOptionPane.showMessageDialog(this, "Delivery Service Found: " + foundDeliveryService, "Found", JOptionPane.INFORMATION_MESSAGE);

            //System.out.println("Delivery Service Found: " + foundDeliveryService);
        } else {
            JOptionPane.showMessageDialog(this, "Delivery Service not found for tracking ID: " + searchTrackingID, "Found", JOptionPane.INFORMATION_MESSAGE);

            System.out.println("Delivery Service not found for tracking ID: " + searchTrackingID);
        }
        }else{
            List<DeliveryService> foundDeliveryServices = searchByDate(deliveryServices, searchDate);

        if (!foundDeliveryServices.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Delivery Services Found for Date " + searchDate + ":", "Found", JOptionPane.INFORMATION_MESSAGE);
            System.out.println("Delivery Services Found for Date " + searchDate + ":");
            for (DeliveryService deliveryService : foundDeliveryServices) {
             
                System.out.println(deliveryService);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No Delivery Services found for Date: " + searchDate, "Found", JOptionPane.INFORMATION_MESSAGE);
            System.out.println("No Delivery Services found for Date: " + searchDate);
        }
        }
    }//GEN-LAST:event_searchButtonActionPerformed
    public static DeliveryService searchByTrackingID(List<DeliveryService> deliveryServices, String trackingID) {
        for (DeliveryService deliveryService : deliveryServices) {
            if (deliveryService.getTrackId().equals(trackingID)) {
                return deliveryService;
            }
        }
        return null; // If not found
    }
    public static List<DeliveryService> searchByDate(List<DeliveryService> deliveryServices, Date searchDate) {
        List<DeliveryService> result = new ArrayList<>();

        for (DeliveryService deliveryService : deliveryServices) {
            if (deliveryService.getTimeStamp().equals(searchDate)) {
                result.add(deliveryService);
            }
        }

        return result;
    }
    private void trackingIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackingIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trackingIDFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputTrackingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputTrackingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputTrackingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputTrackingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputTrackingGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateField;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField trackingIDField;
    // End of variables declaration//GEN-END:variables
}
