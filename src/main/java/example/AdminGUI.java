/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package example;

import com.mycompany.deliveryproject.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class AdminGUI extends javax.swing.JFrame {
 DeliverySystem deliverySystem = new DeliverySystem();
    /**
     * Creates new form AdminGUI
     */
    public AdminGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        historyButton = new javax.swing.JButton();
        trackingButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Delivery Program");
        jLabel1.setToolTipText("");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        historyButton.setText("History");
        historyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyButtonActionPerformed(evt);
            }
        });

        trackingButton.setText("Tracking");
        trackingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackingButtonActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Admin");

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(historyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trackingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(174, 174, 174))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trackingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        JTextField trackingIDField = new JTextField();
                JTextField senderNameField = new JTextField();
                JTextField senderAddressField = new JTextField();
                JTextField senderPhoneNumberField = new JTextField();
                JTextField receiverNameField = new JTextField();
                JTextField receiverAddressField = new JTextField();
                JTextField receiverPhoneNumberField = new JTextField();
                JTextField weightField = new JTextField();
                JCheckBox perishableCheckbox = new JCheckBox("Perishable");

                JPanel panel = new JPanel();
                panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
                panel.add(new JLabel("Tracking ID:"));
                panel.add(trackingIDField);
                panel.add(new JLabel("Sender Name:"));
                panel.add(senderNameField);
                panel.add(new JLabel("Sender Address:"));
                panel.add(senderAddressField);
                panel.add(new JLabel("Sender Phone Number:"));
                panel.add(senderPhoneNumberField);
                panel.add(new JLabel("Receiver Name:"));
                panel.add(receiverNameField);
                panel.add(new JLabel("Receiver Address:"));
                panel.add(receiverAddressField);
                panel.add(new JLabel("Receiver Phone Number:"));
                panel.add(receiverPhoneNumberField);
                panel.add(new JLabel("Weight (kg):"));
                panel.add(weightField);
                panel.add(perishableCheckbox);

                int result = JOptionPane.showConfirmDialog(null, panel,
                        "Enter Parcel Information", JOptionPane.OK_CANCEL_OPTION);

                if (result == JOptionPane.OK_OPTION) {
                    // Extract input values and create a new Parcel object
                    String trackingID = trackingIDField.getText();
                    String senderName = senderNameField.getText();
                    String senderAddress = senderAddressField.getText();
                    String senderPhoneNumber = senderPhoneNumberField.getText();
                    String receiverName = receiverNameField.getText();
                    String receiverAddress = receiverAddressField.getText();
                    String receiverPhoneNumber = receiverPhoneNumberField.getText();
                    double weight = Double.parseDouble(weightField.getText());
                    boolean isPerishable = perishableCheckbox.isSelected();

                    Parcel newParcel = new Parcel(trackingID,senderName, senderAddress, senderPhoneNumber,
                            receiverName, receiverAddress, receiverPhoneNumber, weight, isPerishable);

                    // Add the new parcel to the delivery system
                    deliverySystem.addParcel(newParcel);
                }
    }//GEN-LAST:event_addButtonActionPerformed

    private void historyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyButtonActionPerformed
        // TODO add your handling code here:
        Date currentDate = new Date();

                // Create a table model with headers
                String[] columnNames = {"ID","Sender", "Receiver", "Weight", "Perishable", "Delivered", "Delivery Date"};
                        
                DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);

                // Iterate through the parcels and add relevant data to the table model
                for (Parcel parcel : deliverySystem.getParcels()) {
                    // Check if the parcel is delivered within the last 90 days
                    if (parcel.isDelivered() && withinLast90Days(parcel.getDeliveryDate(), currentDate)) {
                        // Format the delivery date
                        String formattedDate = new SimpleDateFormat("yyyy-MM-dd").format(parcel.getDeliveryDate());

                        // Add data to the table model
                        Object[] rowData = {
                                parcel.getTrackingID(),
                                parcel.getSenderName(),
                                parcel.getReceiverName(),
                                parcel.getWeight(),
                                parcel.isPerishable(),
                                parcel.isDelivered(),
                                formattedDate
                        };
                        tableModel.addRow(rowData);
                    }
                }

                // Create a JTable with the populated table model
                JTable historyTable = new JTable(tableModel);

                // Display the JTable in a JScrollPane to handle scrolling
                JScrollPane scrollPane = new JScrollPane(historyTable);
                JOptionPane.showMessageDialog(null, scrollPane, "Delivery History", JOptionPane.INFORMATION_MESSAGE);
                
    }//GEN-LAST:event_historyButtonActionPerformed
 private boolean withinLast90Days(Date deliveryDate, Date currentDate) {
                // Calculate the difference in milliseconds
                long differenceInMilliseconds = currentDate.getTime() - deliveryDate.getTime();
                // Convert milliseconds to days
                long differenceInDays = differenceInMilliseconds / (24 * 60 * 60 * 1000);

                // Check if the delivery date is within the last 90 days
                return differenceInDays <= 90;
            }
    private void trackingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackingButtonActionPerformed
        // TODO add your handling code here:
         // Prompt the user to enter the tracking ID
        String trackingID = JOptionPane.showInputDialog("Enter Tracking ID:");

        // Search for the parcel with the given tracking ID
        Parcel trackedParcel = findParcelByTrackingID(trackingID);

        // Display tracking information
        if (trackedParcel != null) {
            String status = trackedParcel.isDelivered() ? "Delivered" : "In Transit";
            String deliveryDate = trackedParcel.isDelivered()
                    ? "Delivered on " + trackedParcel.getDeliveryDate()
                    : "Not yet delivered";

            String trackingInfo = String.format("Status: %s\n%s", status, deliveryDate);
            JOptionPane.showMessageDialog(null, trackingInfo, "Parcel Tracking",
                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Parcel not found", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_trackingButtonActionPerformed
private Parcel findParcelByTrackingID(String trackingID) {
        List<Parcel> parcels = deliverySystem.getParcels();
        for (Parcel parcel : parcels) {
            // Assuming Parcel class has a getTrackingID() method
            if (parcel.getTrackingID().equals(trackingID)) {
                return parcel;
            }
        }
        return null;
    }
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton historyButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton trackingButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
